package com.examly.springapp.dto;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;


/*Lombok annotation to generate getters, setters,
toString, equals, and hashCode methods*/

@Data
@NoArgsConstructor
@AllArgsConstructor
public class UserDTO {

    // User ID field, autogenerated by the database
    private long userId;

    // Email validation to ensure it contains "@" and a valid domain like ".com
    @Pattern(regexp = "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,6}$",
    message = "Invalid email format. Email should contain '@' and a valid domain like '.com'.")
    private String email;

    
    /* Password validation to ensure it contains at least one letter,
    one numeric character, and one special character (@, _, or .)*/
    @Pattern(regexp = "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@_.])[A-Za-z\\d@_.]{8,}$",
    message = "Password must contain atleast 8 character")   //Password size validation, minimum size should be 8.             
    private String password;
    
    /*Username validation to ensure it is not blank and 
    contains only alphabets, numeric characters, and underscores */
    @NotBlank(message = "Username cannot be empty")
    @Pattern(regexp = "^[A-Za-z0-9_]*$",
    message ="Username should contain alphabets, numeric characters and underscores")
    private String username;

    /*Mobile number validation to ensure it is exactly 10 digits long */
    @Pattern(regexp = "^[0-9]{10}$", message = "Mobile number must be 10 digits long.")
    private String mobileNumber;

    /*User role validation to ensure it is either 'ADMIN' or 'USER' */
    @Pattern(regexp = "^(ADMIN|USER)$", message = "User role must be 'ADMIN' or 'USER'")
    private String userRole;

}